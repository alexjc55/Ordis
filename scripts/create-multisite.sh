#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ eDAHouse –Ω–∞ –æ–¥–Ω–æ–º VPS
# –ö–∞–∂–¥—ã–π –∏–Ω—Å—Ç–∞–Ω—Å –∏–º–µ–µ—Ç —Å–≤–æ—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Ä—Ç

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
declare -A SITES=(
    ["edahouse"]="edahouse.ordi.co.il:3000"
    ["pizzahouse"]="pizzahouse.ordi.co.il:3001"
    ["sushihouse"]="sushihouse.ordi.co.il:3002"
)

BASE_DIR="/var/www"
REPO_URL="https://github.com/your-username/edahouse.git"

echo "üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—Å–∞–π—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ eDAHouse"
echo "üìä –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å ${#SITES[@]} –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤:"

for site in "${!SITES[@]}"; do
    IFS=':' read -r domain port <<< "${SITES[$site]}"
    echo "   - $site: $domain (–ø–æ—Ä—Ç $port)"
done

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
for cmd in node npm pm2 psql nginx git; do
    if ! command -v $cmd &> /dev/null; then
        echo "‚ùå $cmd –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ scripts/install-on-vps.sh"
        exit 1
    fi
done

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å—ã
for site in "${!SITES[@]}"; do
    IFS=':' read -r domain port <<< "${SITES[$site]}"
    
    echo ""
    echo "üöÄ –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å: $site"
    echo "   –î–æ–º–µ–Ω: $domain"
    echo "   –ü–æ—Ä—Ç: $port"
    
    SITE_DIR="$BASE_DIR/$site"
    DB_NAME="${site}_db"
    DB_USER="${site}_user"
    DB_PASSWORD=$(openssl rand -base64 32)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    sudo mkdir -p "$SITE_DIR"
    sudo chown -R $USER:$USER "$SITE_DIR"
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç..."
    git clone "$REPO_URL" "$SITE_DIR"
    cd "$SITE_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    echo "üóÑÔ∏è –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö $DB_NAME..."
    sudo -u postgres psql <<EOF
CREATE DATABASE $DB_NAME;
CREATE USER $DB_USER WITH ENCRYPTED PASSWORD '$DB_PASSWORD';
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
ALTER USER $DB_USER CREATEDB;
\q
EOF
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    SESSION_SECRET=$(openssl rand -base64 64)
    
    cat > .env <<EOF
# Database Configuration
DATABASE_URL=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME

# PostgreSQL Configuration
PGHOST=localhost
PGPORT=5432
PGDATABASE=$DB_NAME
PGUSER=$DB_USER
PGPASSWORD=$DB_PASSWORD

# Session Configuration
SESSION_SECRET=$SESSION_SECRET

# Server Configuration
PORT=$port
NODE_ENV=production

# Store Configuration
STORE_NAME=$site
STORE_DESCRIPTION=Food delivery service - $site

# Features
ENABLE_REGISTRATION=true
ENABLE_GUEST_ORDERS=true

# File Upload
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads

# Security
ALLOWED_ORIGINS=https://$domain
EOF
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p uploads/images logs backups
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±–∏—Ä–∞–µ–º
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    npm install
    
    echo "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
    npm run build
    
    echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
    npm run db:push
    
    # –°–æ–∑–¥–∞–µ–º PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo "üöÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º PM2..."
    cat > ecosystem.config.js <<EOF
module.exports = {
  apps: [
    {
      name: '$site',
      script: './dist/index.js',
      instances: 1,
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        PORT: $port,
      },
      env_production: {
        NODE_ENV: 'production',
        PORT: $port,
      },
      max_memory_restart: '1G',
      autorestart: true,
      watch: false,
      error_file: './logs/err.log',
      out_file: './logs/out.log',
      log_file: './logs/combined.log',
      time: true,
      kill_timeout: 5000,
      listen_timeout: 3000,
      min_uptime: '10s',
      max_restarts: 10,
    }
  ]
};
EOF
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    pm2 start ecosystem.config.js
    
    # –°–æ–∑–¥–∞–µ–º Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx –¥–ª—è $domain..."
    sudo tee /etc/nginx/sites-available/$domain <<EOF
server {
    listen 80;
    server_name $domain;
    
    location / {
        proxy_pass http://localhost:$port;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }

    location /uploads/ {
        alias $SITE_DIR/uploads/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    client_max_body_size 50M;
}
EOF
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
    sudo ln -sf /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∞
    echo "üîß –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    cp scripts/update-project.sh update-${site}.sh
    chmod +x update-${site}.sh
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    sed -i "s|PROJECT_DIR=\"/var/www/edahouse\"|PROJECT_DIR=\"$SITE_DIR\"|g" update-${site}.sh
    sed -i "s|pm2 reload edahouse|pm2 reload $site|g" update-${site}.sh
    sed -i "s|pm2 describe edahouse|pm2 describe $site|g" update-${site}.sh
    sed -i "s|pm2 logs edahouse|pm2 logs $site|g" update-${site}.sh
    sed -i "s|pm2 status edahouse|pm2 status $site|g" update-${site}.sh
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Å—Ç–∞–Ω—Å–µ
    cat > INSTALLATION_INFO.txt <<EOF
=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ò–ù–°–¢–ê–ù–°–ï ===
–ü—Ä–æ–µ–∫—Ç: $site
–î–æ–º–µ–Ω: $domain
–ü–æ—Ä—Ç: $port
–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SITE_DIR

–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:
- –ò–º—è: $DB_NAME
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $DB_USER
- –ü–∞—Ä–æ–ª—å: $DB_PASSWORD

PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $site
Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: /etc/nginx/sites-available/$domain

–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- –°—Ç–∞—Ç—É—Å: pm2 status $site
- –õ–æ–≥–∏: pm2 logs $site
- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart $site
- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: cd $SITE_DIR && ./update-${site}.sh

–°–æ–∑–¥–∞–Ω: $(date)
EOF
    
    echo "‚úÖ –ò–Ω—Å—Ç–∞–Ω—Å $site —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
done

# –¢–µ—Å—Ç–∏—Ä—É–µ–º Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx..."
sudo nginx -t

echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx..."
sudo systemctl reload nginx

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2..."
pm2 save

# –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo ""
echo "üîí –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
for site in "${!SITES[@]}"; do
    IFS=':' read -r domain port <<< "${SITES[$site]}"
    echo "–ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain..."
    sudo certbot --nginx -d $domain --non-interactive --agree-tos --email admin@$domain || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain"
done

# –°–æ–∑–¥–∞–µ–º –æ–±—â–∏–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "üîß –°–æ–∑–¥–∞–µ–º –æ–±—â–∏–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
cat > /tmp/manage-sites.sh <<'EOF'
#!/bin/bash

SITES=(edahouse pizzahouse sushihouse)

case "$1" in
    status)
        echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤:"
        pm2 status
        ;;
    logs)
        site="${2:-all}"
        if [ "$site" = "all" ]; then
            echo "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤:"
            pm2 logs
        else
            echo "üìã –õ–æ–≥–∏ —Å–∞–π—Ç–∞ $site:"
            pm2 logs "$site"
        fi
        ;;
    restart)
        site="${2:-all}"
        if [ "$site" = "all" ]; then
            echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–∞–π—Ç—ã:"
            for s in "${SITES[@]}"; do
                pm2 restart "$s"
            done
        else
            echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∞–π—Ç $site:"
            pm2 restart "$site"
        fi
        ;;
    update)
        site="${2:-all}"
        if [ "$site" = "all" ]; then
            echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–∞–π—Ç—ã:"
            for s in "${SITES[@]}"; do
                echo "–û–±–Ω–æ–≤–ª—è–µ–º $s..."
                cd "/var/www/$s" && "./update-${s}.sh"
            done
        else
            echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∞–π—Ç $site:"
            cd "/var/www/$site" && "./update-${site}.sh"
        fi
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {status|logs|restart|update} [site_name]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  status          - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤"
        echo "  logs [site]     - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ—Ö –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞)"
        echo "  restart [site]  - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å (–≤—Å–µ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–∞–π—Ç)"
        echo "  update [site]   - –æ–±–Ω–æ–≤–∏—Ç—å (–≤—Å–µ –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–∞–π—Ç)"
        echo ""
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∞–π—Ç—ã: ${SITES[*]}"
        exit 1
        ;;
esac
EOF

sudo mv /tmp/manage-sites.sh /usr/local/bin/manage-sites
sudo chmod +x /usr/local/bin/manage-sites

echo ""
echo "üéâ –ú—É–ª—å—Ç–∏—Å–∞–π—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã:"
for site in "${!SITES[@]}"; do
    IFS=':' read -r domain port <<< "${SITES[$site]}"
    echo "   - $site: https://$domain (–ø–æ—Ä—Ç $port)"
done
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞–º–∏:"
echo "   manage-sites status           - —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤"
echo "   manage-sites logs [site]      - –ª–æ–≥–∏ —Å–∞–π—Ç–∞"
echo "   manage-sites restart [site]   - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞"
echo "   manage-sites update [site]    - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞"
echo ""
echo "üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–∂–¥–æ–º –∏–Ω—Å—Ç–∞–Ω—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö"