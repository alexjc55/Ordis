          <CollapsibleContent className="space-y-6">



        {/* Информация о переносе настроек */}
        <div className="space-y-4">
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 className="text-sm font-medium text-blue-800 mb-2">Настройки отображения перенесены</h4>
            <p className="text-xs text-blue-700">
              Все настройки отображения элементов интерфейса (включая WhatsApp) теперь находятся в разделе "Управление темами" → вкладка "Визуалы".
            </p>
          </div>
        </div>





        {/* Баннер корзины */}
        <div className="space-y-6">
          <div className="flex items-center gap-2 pb-2 border-b" dir={isRTL ? 'rtl' : 'ltr'}>
            {isRTL ? (
              <>
                <h3 className="text-lg font-semibold flex-1 text-right">{adminT('storeSettings.cartBanner')}</h3>
                <ShoppingCart className="h-5 w-5 text-primary" />
              </>
            ) : (
              <>
                <ShoppingCart className="h-5 w-5 text-primary" />
                <h3 className="text-lg font-semibold flex-1 text-left">{adminT('storeSettings.cartBanner')}</h3>
              </>
            )}
          </div>

          <FormField
            control={form.control}
            name="showCartBanner"
            render={({ field }) => (
              <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3">
                <div className="space-y-0.5">
                  <FormLabel className="text-sm font-medium">{adminT('storeSettings.showCartBanner')}</FormLabel>
                  <FormDescription className="text-xs">
{adminT('storeSettings.showCartBannerDescription')}
                  </FormDescription>
                </div>
                <FormControl>
                  <Button
                    type="button"
                    variant="ghost"
                    size="sm"
                    onClick={() => field.onChange(!field.value)}
                    className={`p-2 h-8 w-8 ${field.value ? 'text-green-600 hover:text-green-700' : 'text-gray-400 hover:text-gray-500'}`}
                  >
                    {field.value ? <Eye className="h-4 w-4" /> : <EyeOff className="h-4 w-4" />}
                  </Button>
                </FormControl>
              </FormItem>
            )}
          />

          {form.watch("showCartBanner") && (
            <div className="space-y-4">
              <FormField
                control={form.control}
                name="cartBannerType"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel className="text-sm flex items-center gap-2">
                      <Layers className="h-4 w-4" />
{adminT('storeSettings.bannerType')}
                    </FormLabel>
                    <Select onValueChange={field.onChange} value={field.value}>
                      <FormControl>
                        <SelectTrigger className="text-sm">
                          <SelectValue placeholder={adminT('storeSettings.bannerTypeDescription')} />
                        </SelectTrigger>
                      </FormControl>
                      <SelectContent>
                        <SelectItem value="text">{adminT('storeSettings.textBanner')}</SelectItem>
                        <SelectItem value="image">{adminT('storeSettings.image')}</SelectItem>
                      </SelectContent>
                    </Select>
                    <FormDescription className="text-xs">
                      {adminT('storeSettings.bannerTypeDescription')}
                    </FormDescription>
                    <FormMessage className="text-xs" />
                  </FormItem>
                )}
              />

              {form.watch("cartBannerType") === "text" && (
                <>
                  <FormField
                    control={form.control}
                    name="cartBannerText"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="text-sm flex items-center gap-2">
                          <Type className="h-4 w-4" />
{adminT('storeSettings.bannerText')}
                        </FormLabel>
                        <FormControl>
                          <Textarea 
                            placeholder="Бесплатная доставка от 100₪!"
                            {...field} 
                            className="text-sm min-h-[60px]" 
                          />
                        </FormControl>
                        <FormDescription className="text-xs">
                          Текст для отображения в баннере корзины
                        </FormDescription>
                        <FormMessage className="text-xs" />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="cartBannerBgColor"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="text-sm flex items-center gap-2">
                          <Palette className="h-4 w-4" />
                          Цвет фона
                        </FormLabel>
                        <FormControl>
                          <div className="flex items-center gap-2">
                            <Input 
                              type="color"
                              {...field} 
                              className="w-12 h-8 p-0 border rounded" 
                            />
                            <Input 
                              type="text"
                              {...field} 
                              placeholder="#f97316"
                              className="text-sm flex-1" 
                            />
                          </div>
                        </FormControl>
                        <FormDescription className="text-xs">
                          Цвет фона для текстового баннера
                        </FormDescription>
                        <FormMessage className="text-xs" />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="cartBannerTextColor"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="text-sm flex items-center gap-2">
                          <Type className="h-4 w-4" />
                          Цвет текста
                        </FormLabel>
                        <FormControl>
                          <div className="flex items-center gap-2">
                            <Input 
                              type="color"
                              {...field} 
                              className="w-12 h-8 p-0 border rounded" 
                            />
                            <Input 
                              type="text"
                              {...field} 
                              placeholder="#ffffff"
                              className="text-sm flex-1" 
                            />
                          </div>
                        </FormControl>
                        <FormDescription className="text-xs">
                          Цвет текста для текстового баннера
                        </FormDescription>
                        <FormMessage className="text-xs" />
                      </FormItem>
                    )}
                  />
                </>
              )}

              {form.watch("cartBannerType") === "image" && (
                <FormField
                  control={form.control}
                  name="cartBannerImage"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel className="text-sm flex items-center gap-2">
                        <Upload className="h-4 w-4" />
                        Изображение баннера
                      </FormLabel>
                      <FormControl>
                        <ImageUpload
                          value={field.value || ""}
                          onChange={field.onChange}
                        />
                      </FormControl>
                      <FormDescription className="text-xs text-gray-500">
                        {adminT('storeSettings.bannerMaxHeight')}
                      </FormDescription>
                      <FormMessage className="text-xs" />
                    </FormItem>
                  )}
                />
              )}
            </div>
          )}
        </div>

        {/* Нижние баннеры */}
        <div className="space-y-6">
          <div className="flex items-center gap-2 pb-2 border-b" dir={isRTL ? 'rtl' : 'ltr'}>
            {isRTL ? (
              <>
                <h3 className="text-lg font-semibold flex-1 text-right">{adminT('storeSettings.bottomBanners')}</h3>
                <Layers className="h-5 w-5 text-primary" />
              </>
            ) : (
              <>
                <Layers className="h-5 w-5 text-primary" />
                <h3 className="text-lg font-semibold flex-1 text-left">{adminT('storeSettings.bottomBanners')}</h3>
              </>
            )}
          </div>

          
          <FormField
            control={form.control}
            name="showBottomBanners"
            render={({ field }) => (
              <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3">
                <div className="space-y-0.5">
                  <FormLabel className="text-sm font-medium">{adminT('storeSettings.showBottomBanners')}</FormLabel>
                  <FormDescription className="text-xs">
{adminT('storeSettings.showBottomBannersDescription')}
                  </FormDescription>
                </div>
                <FormControl>
                  <Button
                    type="button"
                    variant="ghost"
                    size="sm"
                    onClick={() => field.onChange(!field.value)}
                    className={`p-2 h-8 w-8 ${field.value ? 'text-green-600 hover:text-green-700' : 'text-gray-400 hover:text-gray-500'}`}
                  >
                    {field.value ? <Eye className="h-4 w-4" /> : <EyeOff className="h-4 w-4" />}
                  </Button>
                </FormControl>
              </FormItem>
            )}
          />

          {form.watch("showBottomBanners") && (
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Banner 1 */}
              <div className="space-y-4 border rounded-lg p-4">
                <h4 className="text-md font-medium">{adminT('storeSettings.banner1Left')}</h4>
                
                <FormField
                  control={form.control}
                  name="bottomBanner1Url"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel className="text-sm flex items-center gap-2">
                        <Upload className="h-4 w-4" />
                        {adminT('storeSettings.banner1Image')}
                      </FormLabel>
                      <FormControl>
                        <ImageUpload
                          value={field.value || ""}
                          onChange={field.onChange}
                        />
                      </FormControl>
                      <FormDescription className="text-xs text-gray-500">
                        Рекомендуемый размер: 660×260 пикселей (соотношение 2.5:1)
                      </FormDescription>
                      <FormMessage className="text-xs" />
                    </FormItem>
                  )}
                />

                <FormField
                  control={form.control}
                  name="bottomBanner1Link"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel className="text-sm">Ссылка при клике на баннер 1</FormLabel>
                      <FormControl>
                        <Input 
                          placeholder="https://example.com"
                          {...field} 
                          className="text-sm" 
                        />
                      </FormControl>
                      <FormDescription className="text-xs">
                        Необязательно. Оставьте пустым, если переход не нужен
                      </FormDescription>
                      <FormMessage className="text-xs" />
                    </FormItem>
                  )}
                />
              </div>

              {/* Banner 2 */}
              <div className="space-y-4 border rounded-lg p-4">
                <h4 className="text-md font-medium">{adminT('storeSettings.banner2Right')}</h4>
                
                <FormField
                  control={form.control}
                  name="bottomBanner2Url"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel className="text-sm flex items-center gap-2">
                        <Upload className="h-4 w-4" />
                        {adminT('storeSettings.banner2Image')}
                      </FormLabel>
                      <FormControl>
                        <ImageUpload
                          value={field.value || ""}
                          onChange={field.onChange}
                        />
                      </FormControl>
                      <FormDescription className="text-xs text-gray-500">
                        Рекомендуемый размер: 660×260 пикселей (соотношение 2.5:1)
                      </FormDescription>
                      <FormMessage className="text-xs" />
                    </FormItem>
                  )}
                />

                <FormField
                  control={form.control}
                  name="bottomBanner2Link"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel className="text-sm">{adminT('storeSettings.banner2Link')}</FormLabel>
                      <FormControl>
                        <Input 
                          placeholder="https://example.com"
                          {...field} 
                          className="text-sm" 
                        />
                      </FormControl>
                      <FormDescription className="text-xs">
                        Необязательно. Оставьте пустым, если переход не нужен
                      </FormDescription>
                      <FormMessage className="text-xs" />
                    </FormItem>
                  )}
                />
              </div>
            </div>
          )}
        </div>
          </CollapsibleContent>
