#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ eDAHouse –Ω–∞ Debian 12 —Å FastPanel
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2025-07-02

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ eDAHouse –Ω–∞ Debian 12 —Å FastPanel"
echo "================================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # –ë–µ–∑ —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –ø–æ–¥ root –∏–ª–∏ —Å sudo
if [[ $EUID -eq 0 ]]; then
   log_warning "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –ø–æ–¥ root. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–¥ –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å sudo."
fi

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_DIR="/var/www/edahouse"
DOMAIN="edahouse.ordis.co.il"
DB_NAME="edahouse_ord"
DB_USER="edahouse_ord"
DB_PASS="33V0R1N5qi81paiA"
APP_PORT="3000"
NODE_VERSION="18"

log_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "  üìÅ –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
echo "  üåê –î–æ–º–µ–Ω: $DOMAIN"
echo "  üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
echo "  üîå –ü–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_PORT"
echo ""

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç
is_installed() {
    command -v "$1" >/dev/null 2>&1
}

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y
log_success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
PACKAGES="curl wget git nano htop unzip build-essential"
for package in $PACKAGES; do
    if ! dpkg -l | grep -q "^ii  $package "; then
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package..."
        sudo apt install -y $package
    fi
done
log_success "–ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –≥–æ—Ç–æ–≤—ã"

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
if is_installed node; then
    NODE_VER=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VER" -ge 16 ]; then
        log_success "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
    else
        log_warning "Node.js –≤–µ—Ä—Å–∏–∏ $NODE_VER —É—Å—Ç–∞—Ä–µ–ª, –æ–±–Ω–æ–≤–ª—è–µ–º..."
        curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | sudo -E bash -
        sudo apt-get install -y nodejs
    fi
else
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js $NODE_VERSION..."
    curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | sudo -E bash -
    sudo apt-get install -y nodejs
fi
log_success "Node.js –≥–æ—Ç–æ–≤: $(node --version)"

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ PM2..."
if is_installed pm2; then
    log_success "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(pm2 --version)"
else
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
    sudo npm install -g pm2
fi
log_success "PM2 –≥–æ—Ç–æ–≤"

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
APP_USER="www-data"
log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_USER"

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
sudo mkdir -p $PROJECT_DIR
sudo chown $USER:$USER $PROJECT_DIR
log_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $PROJECT_DIR —Å–æ–∑–¥–∞–Ω–∞"

# 7. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ GitHub..."
if [ -d "$PROJECT_DIR/.git" ]; then
    log_warning "–ü—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    cd $PROJECT_DIR
    git pull origin main
else
    git clone https://github.com/alexjc55/Ordis.git $PROJECT_DIR
    cd $PROJECT_DIR
fi
log_success "–ü—Ä–æ–µ–∫—Ç –∑–∞–≥—Ä—É–∂–µ–Ω"

# 8. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install
log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 9. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << EOF
# –û–∫—Ä—É–∂–µ–Ω–∏–µ
NODE_ENV=production
PORT=$APP_PORT
HOST=0.0.0.0

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://$DB_USER:$DB_PASS@localhost:5432/$DB_NAME
PGHOST=localhost
PGPORT=5432
PGDATABASE=$DB_NAME
PGUSER=$DB_USER
PGPASSWORD=$DB_PASS

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SESSION_SECRET=WAVl58TU5MAzQkQa6w8YTsuFYyyCwIl24D2j5BNsX4reNv1iYPdNQHtog2Y0CYQ39U1HGYYG1cNQhLIGfxPVNg==

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
ENABLE_REGISTRATION=true
ENABLE_GUEST_ORDERS=true
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads
ALLOWED_ORIGINS=https://$DOMAIN
STORE_NAME=edahouse
STORE_DESCRIPTION=Food delivery service
EOF
log_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# 10. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
mkdir -p uploads/images logs backups
sudo chown -R $USER:$USER uploads logs backups
log_success "–ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã"

# 11. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
log_info "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
npm run build
log_success "–ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"

# 12. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2..."
cat > ecosystem.config.js << EOF
module.exports = {
  apps: [{
    name: 'edahouse',
    script: 'dist/index.js',
    cwd: '$PROJECT_DIR',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      PORT: $APP_PORT,
      HOST: '0.0.0.0'
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true,
    max_restarts: 10,
    min_uptime: '10s'
  }]
};
EOF
log_success "PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# 13. –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ PostgreSQL
if is_installed psql; then
    log_success "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
        log_warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $DB_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö $DB_NAME..."
        sudo -u postgres psql << EOF
CREATE DATABASE $DB_NAME;
CREATE USER $DB_USER WITH PASSWORD '$DB_PASS';
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
ALTER USER $DB_USER CREATEDB;
\q
EOF
        log_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    fi
else
    log_error "PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ FastPanel –∏–ª–∏ –≤—Ä—É—á–Ω—É—é."
    exit 1
fi

# 14. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
npm run db:push
log_success "–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞"

# 15. –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_info "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
timeout 10 npm run start > /dev/null 2>&1 &
sleep 5
if curl -s http://localhost:$APP_PORT/api/health > /dev/null; then
    log_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $APP_PORT"
    pkill -f "node dist/index.js" || true
else
    log_error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
fi

# 16. –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PM2
log_info "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ PM2..."
pm2 delete edahouse 2>/dev/null || true  # –£–¥–∞–ª–∏—Ç—å –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
pm2 start ecosystem.config.js
pm2 save
log_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ PM2"

# 17. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2
log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2..."
pm2 startup systemd -u $USER --hp $HOME
log_success "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# 18. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å PM2:"
pm2 status

echo ""
echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
if curl -s http://localhost:$APP_PORT/api/health | grep -q "healthy"; then
    log_success "API –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log_warning "API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
fi

echo ""
echo "üìÅ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:"
ls -la $PROJECT_DIR | head -5

# 19. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================"
echo ""
log_info "–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ FastPanel:"
echo "  1. –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª '–î–æ–º–µ–Ω—ã'"
echo "  2. –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω: $DOMAIN"
echo "  3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏:"
echo "     - –•–æ—Å—Ç: 127.0.0.1 (–∏–ª–∏ localhost)"
echo "     - –ü–æ—Ä—Ç: $APP_PORT"
echo "  4. –í–∫–ª—é—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
echo ""
log_info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: pm2 status"
echo "  üìù –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: pm2 logs edahouse"
echo "  üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart edahouse"
echo "  üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: pm2 stop edahouse"
echo "  üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞:"
echo "     cd $PROJECT_DIR"
echo "     git pull origin main"
echo "     npm install"
echo "     npm run build"
echo "     pm2 restart edahouse"
echo ""
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "  üåê –õ–æ–∫–∞–ª—å–Ω–æ: curl http://localhost:$APP_PORT/api/health"
echo "  üåç –ü—É–±–ª–∏—á–Ω–æ: curl https://$DOMAIN/api/health (–ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏)"
echo ""
log_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
echo ""
log_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –≤ FastPanel –Ω–∞ localhost:$APP_PORT"