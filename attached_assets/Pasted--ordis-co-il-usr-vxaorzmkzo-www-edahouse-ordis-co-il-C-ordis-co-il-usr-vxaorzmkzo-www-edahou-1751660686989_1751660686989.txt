
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ ^C
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã Node.js –Ω–µ –≤–∏—Å—è—Ç
sudo netstat -tlnp | grep node
ps aux | grep node

# –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≤–∏—Å—à–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, —É–±—å–µ–º –∏—Ö
sudo pkill -f node

# –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—à–∏–±–æ–∫
NODE_ENV=production PORT=3000 node dist/index.js
sudo: netstat: command not found
ordis_c+  313214  0.8  4.1 21904604 84648 ?      Sl   23:17   0:01 node /var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dis
ordis_c+  313261  0.0  0.1   6336  2132 pts/0    S+   23:19   0:00 grep node
node:internal/errors:496
    ErrorCaptureStackTrace(err);
    ^

TypeError [ERR_INVALID_ARG_TYPE]: The "paths[0]" argument must be of type string. Received undefined
    at new NodeError (node:internal/errors:405:5)
    at validateString (node:internal/validators:162:11)
    at Object.resolve (node:path:1115:7)
    at file:///var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dist/index.js:3655:18
    at ModuleJob.run (node:internal/modules/esm/module_job:195:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:337:24)
    at async loadESM (node:internal/process/esm_loader:34:7)
    at async handleMainPromise (node:internal/modules/run_main:106:12) {
  code: 'ERR_INVALID_ARG_TYPE'
}

Node.js v18.20.6
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ ^C
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ sudo pkill -f node
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # –ü—Ä–æ–≤–µ—Ä–∏–º –≤–µ—Ä—Å–∏—é Node.js –≤ FastPanel
node --version
which node

# –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è FastPanel
env | grep -E "(NODE|PATH)"

# –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é FastPanel –¥–ª—è —ç—Ç–æ–≥–æ –¥–æ–º–µ–Ω–∞
sudo find /etc -name "*edahouse*" -type f 2>/dev/null
sudo find /usr/local/fastpanel -name "*edahouse*" -type f 2>/dev/null
v18.20.6
/usr/bin/node
PATH=/var/www/ordis_co_il_usr/data/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/var/www/ordis_co_il_usr/data/.local/bin
/etc/letsencrypt/renewal/edahouse.ordis.co.il.conf
/etc/logrotate.d/edahouse.ordis.co.il
/etc/nginx/fastpanel2-sites/ordis_co_il_usr/edahouse.ordis.co.il.includes
/etc/nginx/sites-available/edahouse.ordis.co.il.disabled
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf.backup
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ ^C
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # –ü—Ä–æ–≤–µ—Ä–∏–º PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cat ecosystem.config.cjs

# –ü–æ—Å–º–æ—Ç—Ä–∏–º Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é FastPanel
sudo cat /etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf
module.exports = {
  apps: [
    {
      name: 'edahouse',
      script: './dist/index.js',
      instances: 1,
      exec_mode: 'cluster',
      env: {
        NODE_ENV: 'production',
        PORT: 3000,
        DATABASE_URL: 'postgresql://edahouse_ord:33V0R1N5qi81paiA@localhost:5432/edahouse_ord',
        SESSION_SECRET: 'WAVl58TU5MAzQkQa6w8YTsuFYyyCwIl24D2j5BNsX4reNv1iYPdNQHtog2Y0CYQ39U1HGYYG1cNQhLIGfxPVNg==',
        ENABLE_REGISTRATION: 'true',
        ENABLE_GUEST_ORDERS: 'true',
        MAX_FILE_SIZE: '5242880',
        UPLOAD_PATH: './uploads',
        ALLOWED_ORIGINS: 'https://edahouse.ordis.co.il',
        STORE_NAME: 'edahouse',
        STORE_DESCRIPTION: 'Food delivery service'
      },
      env_production: {
        NODE_ENV: 'production',
        PORT: 3000,
        DATABASE_URL: 'postgresql://edahouse_ord:33V0R1N5qi81paiA@localhost:5432/edahouse_ord',
        SESSION_SECRET: 'WAVl58TU5MAzQkQa6w8YTsuFYyyCwIl24D2j5BNsX4reNv1iYPdNQHtog2Y0CYQ39U1HGYYG1cNQhLIGfxPVNg==',
        ENABLE_REGISTRATION: 'true',
        ENABLE_GUEST_ORDERS: 'true',
        MAX_FILE_SIZE: '5242880',
        UPLOAD_PATH: './uploads',
        ALLOWED_ORIGINS: 'https://edahouse.ordis.co.il',
        STORE_NAME: 'edahouse',
        STORE_DESCRIPTION: 'Food delivery service'
      },
      // Restart settings
      max_memory_restart: '1G',
      autorestart: true,
      watch: false,

      // Logging
      error_file: './logs/err.log',
      out_file: './logs/out.log',
      log_file: './logs/combined.log',
      time: true,

      // Graceful shutdown
      kill_timeout: 5000,
      listen_timeout: 3000,

      // Health monitoring
      min_uptime: '10s',
      max_restarts: 10,
    }
  ],

  // Deployment configuration
  deploy: {
    production: {
      user: 'deployer',
      host: 'your-server-ip',
      ref: 'origin/main',
      repo: 'git@github.com:username/edahouse.git',
      path: '/var/www/edahouse',
      'post-deploy': 'npm install && npm run build && pm2 reload ecosystem.config.js --env production',
      'pre-setup': 'git clone git@github.com:username/edahouse.git .',
    }
  }
};

upstream edahouse.ordis.co.il {
    server 127.0.0.1:3000;
}

server {
    server_name edahouse.ordis.co.il ;

    listen 178.236.17.141:443 ssl;


    ssl_certificate "/var/www/httpd-cert/edahouse.ordis.co.il_2025-07-02-20-37_46.crt";
    ssl_certificate_key "/var/www/httpd-cert/edahouse.ordis.co.il_2025-07-02-20-37_46.key";

    charset utf-8;
    gzip on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/css image/x-ico application/pdf image/jpeg image/png image/gif application/javascript application/x-javascript application/x-pointplus;
    gzip_comp_level 1;

    set $root_path /var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il;

    root $root_path;
    disable_symlinks if_not_owner from=$root_path;

    location / {
        proxy_pass http://edahouse.ordis.co.il;
        include /etc/nginx/proxy_params;
    }


    location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpeg|avi|zip|gz|bz2|rar|swf|ico|7z|doc|docx|map|ogg|otf|pdf|tff|tif|txt|wav|webp|woff|woff2|xls|xlsx|xml)$ {
        try_files $uri $uri/ @fallback;
    }

    location @fallback {
        proxy_pass http://edahouse.ordis.co.il;
        include /etc/nginx/proxy_params;
    }


    include "/etc/nginx/fastpanel2-sites/ordis_co_il_usr/edahouse.ordis.co.il.includes";
    include /etc/nginx/fastpanel2-includes/*.conf;


    error_log /var/www/ordis_co_il_usr/data/logs/edahouse.ordis.co.il-frontend.error.log;
    access_log /var/www/ordis_co_il_usr/data/logs/edahouse.ordis.co.il-frontend.access.log;
}


server {
    server_name edahouse.ordis.co.il ;
    listen 178.236.17.141:80;
    return 301 https://$host$request_uri;

    error_log /var/www/ordis_co_il_usr/data/logs/edahouse.ordis.co.il-frontend.error.log;
    access_log /var/www/ordis_co_il_usr/data/logs/edahouse.ordis.co.il-frontend.access.log;
}
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ ^C
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ dist/index.js
sed -n '3650,3660p' dist/index.js

# –ò—Å–ø—Ä–∞–≤–∏–º import.meta.dirname –Ω–∞ process.cwd()
sed -i 's/import\.meta\.dirname/process.cwd()/g' dist/index.js

# –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å
grep -n "process.cwd" dist/index.js | head -5

# –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å
NODE_ENV=production PORT=3000 node dist/index.js
      )
    ] : []
  ],
  resolve: {
    alias: {
      "@": path2.resolve(import.meta.dirname, "client", "src"),
      "@shared": path2.resolve(import.meta.dirname, "shared"),
      "@assets": path2.resolve(import.meta.dirname, "attached_assets")
    }
  },
  root: path2.resolve(import.meta.dirname, "client"),
2107:      const uploadsDir2 = path.join(process.cwd(), "uploads");
2127:  const uploadsDir = path.join(process.cwd(), "uploads", "images");
2154:  app2.use("/uploads", express.static(path.join(process.cwd(), "uploads"), {
3655:      "@": path2.resolve(process.cwd(), "client", "src"),
3656:      "@shared": path2.resolve(process.cwd(), "shared"),
üå± Seeding database...
Database already seeded or error occurred: ErrorEvent {
  [Symbol(kTarget)]: WebSocket {
    _events: [Object: null prototype] {
      error: [Function],
      message: [Function],
      close: [Function],
      open: [Function]
    },
    _eventsCount: 4,
    _maxListeners: undefined,
    _binaryType: 'arraybuffer',
    _closeCode: 1006,
    _closeFrameReceived: false,
    _closeFrameSent: false,
    _closeMessage: <Buffer >,
    _closeTimer: null,
    _errorEmitted: true,
    _extensions: {},
    _paused: false,
    _protocol: '',
    _readyState: 3,
    _receiver: null,
    _sender: null,
    _socket: null,
    _bufferedAmount: 0,
    _isServer: false,
    _redirects: 0,
    _autoPong: true,
    _url: 'wss://localhost/v2',
    _req: null,
    [Symbol(kCapture)]: false
  },
  [Symbol(kType)]: 'error',
  [Symbol(kError)]: Error: connect ECONNREFUSED ::1:443
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16) {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '::1',
    port: 443
  },
  [Symbol(kMessage)]: 'connect ECONNREFUSED ::1:443'
}
file:///var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dist/index.js:3730
    throw new Error(
          ^

Error: Could not find the build directory: /var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/public, make sure to build the client first
    at serveStatic (file:///var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dist/index.js:3730:11)
    at file:///var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dist/index.js:4262:5
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

Node.js v18.20.6
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ dist/index.js
sed -n '3650,3660p' dist/index.js

# –ò—Å–ø—Ä–∞–≤–∏–º import.meta.dirname –Ω–∞ process.cwd()
sed -i 's/import\.meta\.dirname/process.cwd()/g' dist/index.js

# –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å
grep -n "process.cwd" dist/index.js | head -5

# –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å
NODE_ENV=production PORT=3000 node dist/index.js
