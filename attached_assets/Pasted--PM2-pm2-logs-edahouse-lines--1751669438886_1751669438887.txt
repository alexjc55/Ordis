# Проверить логи PM2 чтобы увидеть на каком порту запустилось приложение
pm2 logs edahouse --lines 10 | grep -i "port\|listening\|serving"

# Попробовать разные порты
for port in 3000 3001 5000 8080; do
  echo "Testing port $port:"
  curl -s http://localhost:$port/api/health | head -c 50 || echo "Not responding"
done
/etc/nginx/fastpanel2-sites/ordis_co_il_usr/edahouse.ordis.co.il.includes
/etc/nginx/sites-available/edahouse.ordis.co.il.disabled
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf.backup
/etc/nginx/fastpanel2-sites/ordis_co_il_usr/ordis.co.il.includes
/etc/nginx/fastpanel2-sites/ordis_co_il_usr/edahouse.ordis.co.il.includes
/etc/nginx/sites-available/edahouse.ordis.co.il.disabled
/etc/nginx/fastpanel2-available/ordis_co_il_usr/ordis.co.il.conf
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf
/etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf.backup
0|edahouse |     at async ModuleLoader.import (node:internal/modules/esm/loader:337:24)
0|edahouse |     at async importModuleDynamicallyWrapper (node:internal/vm/module:432:15)
^C
Testing port 3000:
Testing port 3001:
Testing port 5000:
Testing port 8080:
ordis_co_il_usr@vxaorzmkzo:~/www/edahouse.ordis.co.il$ # Проверить текущую конфигурацию Nginx
sudo cat /etc/nginx/fastpanel2-available/ordis_co_il_usr/edahouse.ordis.co.il.conf | grep proxy_pass

# Проверить почему приложение не запускается - посмотреть ошибки
pm2 restart edahouse
sleep 3
pm2 logs edahouse --lines 5 --err

# Проверить содержимое .env файла
cat .env | grep PORT

# Принудительно запустить на порту 3000
PORT=3000 pm2 restart edahouse

# Проверить что теперь слушает на 3000
sleep 5
curl -s http://localhost:3000/api/health || echo "Still not working"
        proxy_pass http://edahouse.ordis.co.il;
        proxy_pass http://edahouse.ordis.co.il;
Use --update-env to update environment variables
[PM2] Applying action restartProcessId on app [edahouse](ids: [ 0 ])
[PM2] [edahouse](0) ✓
┌────┬─────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐
│ id │ name        │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │
├────┼─────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤
│ 0  │ edahouse    │ default     │ 1.0.0   │ cluster │ 318153   │ 0s     │ 1    │ online    │ 0%       │ 41.0mb   │ ord… │ disabled │
└────┴─────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘
[TAILING] Tailing last 5 lines for [edahouse] process (change the value with --lines option)
/var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/logs/err-0.log last 5 lines:
0|edahouse |     at Object.resolve (node:path:1115:7)
0|edahouse |     at file:///var/www/ordis_co_il_usr/data/www/edahouse.ordis.co.il/dist/index.js:3655:18
0|edahouse |     at ModuleJob.run (node:internal/modules/esm/module_job:195:25)
0|edahouse |     at async ModuleLoader.import (node:internal/modules/esm/loader:337:24)
0|edahouse |     at async importModuleDynamicallyWrapper (node:internal/vm/module:432:15)
